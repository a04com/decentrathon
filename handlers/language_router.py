from aiogram import Router, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.enums.parse_mode import ParseMode
from aiogram.types import FSInputFile, InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
from aiogram.filters import CommandStart
import aiogram.utils.markdown as fmt

from decentrathon.handlers.keyboards import languageChoiceKeyboard

class Language(StatesGroup):
    language = State()

router = Router()

@router.message(CommandStart())
async def language_choosing_state(message: Message, state: FSMContext):
    await state.set_state(Language.language)

    # keyboard_builder = InlineKeyboardBuilder()
    # keyboard_builder.button(text="kz", callback_data="kz")
    # keyboard_builder.button(text="en", callback_data="en")
    # keyboard_builder.button(text="ru", callback_data="ru")

    await message.answer("Choose your language:", reply_markup=languageChoiceKeyboard())

@router.callback_query(Language.language, F.data)
async def chosen_language(callback: CallbackQuery, state: FSMContext):
    await callback.message.answer(callback.data)
    await state.update_data(language=callback.data)
    language_data = await state.get_data()
    userName = callback.from_user.first_name
    startPhoto = FSInputFile(r"files/logo.jpg")

    if language_data["language"] == "kz":
        text = "Hirely –∞—à—É"
    elif language_data["language"] == "en":
        text = "open Hirely"
    elif language_data["language"] == "ru":
        text = "–æ—Ç–∫—Ä—ã—Ç—å Hirely"

    markup = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text=text, web_app=WebAppInfo(url='https://example.com'))]
        ]
    )

    if language_data["language"] == "kz":
        await callback.message.answer_photo(photo=startPhoto, caption=f'''
        üåü –°”ô–ª–µ–º {fmt.hbold(userName)} –∂”ô–Ω–µ <b>Hirely!</b> —Å–∞–π—Ç—ã–Ω–∞ “õ–æ—à –∫–µ–ª–¥—ñ“£—ñ–∑! –ú“±–Ω–¥–∞ —Å—ñ–∑ <b>”©–∑—ñ“£—ñ–∑–≥–µ —Å”ô–π–∫–µ—Å –∫–µ–ª–µ—Ç—ñ–Ω –∂“±–º—ã—Å—Ç–∞—Ä–¥—ã –Ω–µ–º–µ—Å–µ “õ—ã–∑–º–µ—Ç–∫–µ—Ä–ª–µ—Ä–¥—ñ –æ“£–∞–π —Ç–∞–±–∞ –∞–ª–∞—Å—ã–∑.</b> –ñ–∞“£–∞ –º“Ø–º–∫—ñ–Ω–¥—ñ–∫—Ç–µ—Ä–≥–µ —Å–∞—è—Ö–∞—Ç—Ç—ã –±—ñ—Ä–≥–µ –±–∞—Å—Ç–∞–π—ã“õ! üöÄ
        ''', reply_markup=markup, parse_mode=ParseMode.HTML)

    elif language_data["language"] == "en":
        await callback.message.answer_photo(photo=startPhoto, caption=f'''
    üåü Hi {fmt.hbold(userName)} and welcome to <b>Hirely!</b> Here you can easily find a job or employees <b>that are right for you.</b> Let's start this journey to new opportunities together! üöÄ
    ''', reply_markup=markup, parse_mode=ParseMode.HTML)

    elif language_data["language"] == "ru":
        await callback.message.answer_photo(photo=startPhoto, caption=f'''
    üåü –ü—Ä–∏–≤–µ—Ç {fmt.hbold(userName)} –∏ –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>Hirely!</b> –ó–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å –ª–µ–≥–∫–æ –Ω–∞–π—Ç–∏ —Ä–∞–±–æ—Ç—É –∏–ª–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ <b>–∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–æ–π–¥—É—Ç –∏–º–µ–Ω–Ω–æ —Ç–µ–±–µ.</b> –î–∞–≤–∞–π –Ω–∞—á–Ω—ë–º —ç—Ç–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –∫ –Ω–æ–≤—ã–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º –≤–º–µ—Å—Ç–µ! üöÄ
    ''', reply_markup=markup, parse_mode=ParseMode.HTML)

    await state.clear()
